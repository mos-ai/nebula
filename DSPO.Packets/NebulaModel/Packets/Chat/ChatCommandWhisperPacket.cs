// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace NebulaModel.Packets.Chat
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ChatCommandWhisperPacketT : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static ChatCommandWhisperPacketT GetRootAsChatCommandWhisperPacketT(ByteBuffer _bb) { return GetRootAsChatCommandWhisperPacketT(_bb, new ChatCommandWhisperPacketT()); }
  public static ChatCommandWhisperPacketT GetRootAsChatCommandWhisperPacketT(ByteBuffer _bb, ChatCommandWhisperPacketT obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ChatCommandWhisperPacketT __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string SenderUsername { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSenderUsernameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetSenderUsernameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetSenderUsernameArray() { return __p.__vector_as_array<byte>(4); }
  public string RecipientUsername { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRecipientUsernameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetRecipientUsernameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetRecipientUsernameArray() { return __p.__vector_as_array<byte>(6); }
  public string Message { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<NebulaModel.Packets.Chat.ChatCommandWhisperPacketT> CreateChatCommandWhisperPacketT(FlatBufferBuilder builder,
      StringOffset SenderUsernameOffset = default(StringOffset),
      StringOffset RecipientUsernameOffset = default(StringOffset),
      StringOffset MessageOffset = default(StringOffset)) {
    builder.StartTable(3);
    ChatCommandWhisperPacketT.AddMessage(builder, MessageOffset);
    ChatCommandWhisperPacketT.AddRecipientUsername(builder, RecipientUsernameOffset);
    ChatCommandWhisperPacketT.AddSenderUsername(builder, SenderUsernameOffset);
    return ChatCommandWhisperPacketT.EndChatCommandWhisperPacketT(builder);
  }

  public static void StartChatCommandWhisperPacketT(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSenderUsername(FlatBufferBuilder builder, StringOffset senderUsernameOffset) { builder.AddOffset(0, senderUsernameOffset.Value, 0); }
  public static void AddRecipientUsername(FlatBufferBuilder builder, StringOffset recipientUsernameOffset) { builder.AddOffset(1, recipientUsernameOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(2, messageOffset.Value, 0); }
  public static Offset<NebulaModel.Packets.Chat.ChatCommandWhisperPacketT> EndChatCommandWhisperPacketT(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NebulaModel.Packets.Chat.ChatCommandWhisperPacketT>(o);
  }
  public ChatCommandWhisperPacket UnPack() {
    var _o = new ChatCommandWhisperPacket();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ChatCommandWhisperPacket _o) {
    _o.SenderUsername = this.SenderUsername;
    _o.RecipientUsername = this.RecipientUsername;
    _o.Message = this.Message;
  }
  public static Offset<NebulaModel.Packets.Chat.ChatCommandWhisperPacketT> Pack(FlatBufferBuilder builder, ChatCommandWhisperPacket _o) {
    if (_o == null) return default(Offset<NebulaModel.Packets.Chat.ChatCommandWhisperPacketT>);
    var _SenderUsername = _o.SenderUsername == null ? default(StringOffset) : builder.CreateString(_o.SenderUsername);
    var _RecipientUsername = _o.RecipientUsername == null ? default(StringOffset) : builder.CreateString(_o.RecipientUsername);
    var _Message = _o.Message == null ? default(StringOffset) : builder.CreateString(_o.Message);
    return CreateChatCommandWhisperPacketT(
      builder,
      _SenderUsername,
      _RecipientUsername,
      _Message);
  }
}

public class ChatCommandWhisperPacket
{
  public string SenderUsername { get; set; }
  public string RecipientUsername { get; set; }
  public string Message { get; set; }

  public ChatCommandWhisperPacket() {
    this.SenderUsername = null;
    this.RecipientUsername = null;
    this.Message = null;
  }
}


static public class ChatCommandWhisperPacketTVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*SenderUsername*/, false)
      && verifier.VerifyString(tablePos, 6 /*RecipientUsername*/, false)
      && verifier.VerifyString(tablePos, 8 /*Message*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
